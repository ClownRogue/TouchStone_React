{
    "name": "est-pc",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "scripts": {
        "clean": "rimraf ./dist/*",
        "clean:dll": "rimraf ./dist/vendor-manifest.json ./dist/vendor.dll.js",
        "fix-memory-limit": "cross-env LIMIT=5120 increase-memory-limit",
        "dll": "npm run clean:dll && webpack --mode=production --config ./build/webpack.dll.js --progress",
        "build": "npm run clean && npm run dll && npm run build:app && npm run build:riskManagement && npm run build:configPage && npm run build:basicData && npm run build:authManage && npm run build:beforeManage && npm run build:centerManage && npm run build:afterManage && npm run build:exitManage && npm run build:transactionOpponent && npm run build:redYellowBlueCard && npm run build:groupReport && npm run build:evaluateCalculation && npm run build:capitalPlan && npm run build:statisticalReports",
        "build:test": "npm run clean && npm run dll && npm run build:app:test && npm run build:riskManagement:test && npm run build:configPage:test && npm run build:basicData:test && npm run build:authManage:test && npm run build:beforeManage:test && npm run build:centerManage:test && npm run build:afterManage:test && npm run build:exitManage:test && npm run build:transactionOpponent:test && npm run build:redYellowBlueCard:test && npm run build:groupReport:test && npm run build:evaluateCalculation:test && npm run build:capitalPlan:test && npm run build:statisticalReports:test && npm run build:warningManage:test",
        "micro:dev": "cross-env NODE_ENV=development webpack-dev-server --config ./build/webpack.micro.config.js --progress",
        "micro:build": "cross-env NODE_ENV=production webpack --config ./build/webpack.micro.config.js --progress",
        "micro:build:test": "cross-env NODE_ENV=production BUILD_ENV=test webpack --config ./build/webpack.micro.config.js --progress",
        "micro:build:analyzer": "cross-env NODE_ENV=production npm_config_report=true webpack --config ./build/webpack.micro.config.js --progress",
        "clean:app": "rimraf ./dist/app/*",
        "dev:app": "cross-env MODULE=app npm run micro:dev",
        "build:app": "npm run clean:app && cross-env MODULE=app npm run micro:build",
        "build:app:test": "npm run clean:app && cross-env MODULE=app npm run micro:build:test",
        "build:app:analyzer": "npm run clean:app && cross-env MODULE=app npm run micro:build:analyzer",
        "clean:riskManagement": "rimraf ./dist/riskManagement/*",
        "dev:riskManagement": "cross-env MODULE=riskManagement npm run micro:dev",
        "dev:riskManagement:app": "cross-env MODULE_DEV=riskManagement npm run build:app && npm run dev:riskManagement",
        "build:riskManagement": "npm run clean:riskManagement && cross-env MODULE=riskManagement npm run micro:build",
        "build:riskManagement:test": "npm run clean:riskManagement && cross-env MODULE=riskManagement npm run micro:build:test",
        "build:riskManagement:analyzer": "npm run clean:riskManagement && cross-env MODULE=riskManagement npm run micro:build:analyzer",
        "clean:configPage": "rimraf ./dist/configPage/*",
        "dev:configPage": "cross-env MODULE=configPage npm run micro:dev",
        "dev:configPage:app": "cross-env MODULE_DEV=configPage npm run build:app && npm run dev:configPage",
        "build:configPage": "npm run clean:configPage && cross-env MODULE=configPage npm run micro:build",
        "build:configPage:test": "npm run clean:configPage && cross-env MODULE=configPage npm run micro:build:test",
        "build:configPage:analyzer": "npm run clean:configPage && cross-env MODULE=configPage npm run micro:build:analyzer",
        "clean:basicData": "rimraf ./dist/basicData/*",
        "dev:basicData": "cross-env MODULE=basicData npm run micro:dev",
        "dev:basicData:app": "cross-env MODULE_DEV=basicData npm run build:app && npm run dev:basicData",
        "build:basicData": "npm run clean:basicData && cross-env MODULE=basicData npm run micro:build",
        "build:basicData:test": "npm run clean:basicData && cross-env MODULE=basicData npm run micro:build:test",
        "build:basicData:analyzer": "npm run clean:basicData && cross-env MODULE=basicData npm run micro:build:analyzer",
        "clean:authManage": "rimraf ./dist/authManage/*",
        "dev:authManage": "cross-env MODULE=authManage npm run micro:dev",
        "dev:authManage:app": "cross-env MODULE_DEV=authManage npm run build:app && npm run dev:authManage",
        "build:authManage": "npm run clean:authManage && cross-env MODULE=authManage npm run micro:build",
        "build:authManage:test": "npm run clean:authManage && cross-env MODULE=authManage npm run micro:build:test",
        "build:authManage:analyzer": "npm run clean:authManage && cross-env MODULE=authManage npm run micro:build:analyzer",
        "clean:beforeManage": "rimraf ./dist/beforeManage/*",
        "dev:beforeManage": "cross-env MODULE=beforeManage npm run micro:dev",
        "dev:beforeManage:app": "cross-env MODULE_DEV=beforeManage npm run build:app && npm run dev:beforeManage",
        "build:beforeManage": "npm run clean:beforeManage && cross-env MODULE=beforeManage npm run micro:build",
        "build:beforeManage:test": "npm run clean:beforeManage && cross-env MODULE=beforeManage npm run micro:build:test",
        "build:beforeManage:analyzer": "npm run clean:beforeManage && cross-env MODULE=beforeManage npm run micro:build:analyzer",
        "clean:centerManage": "rimraf ./dist/centerManage/*",
        "dev:centerManage": "cross-env MODULE=centerManage npm run micro:dev",
        "dev:centerManage:app": "cross-env MODULE_DEV=centerManage npm run build:app && npm run dev:centerManage",
        "build:centerManage": "npm run clean:centerManage && cross-env MODULE=centerManage npm run micro:build",
        "build:centerManage:test": "npm run clean:centerManage && cross-env MODULE=centerManage npm run micro:build:test",
        "build:centerManage:analyzer": "npm run clean:centerManage && cross-env MODULE=centerManage npm run micro:build:analyzer",
        "clean:afterManage": "rimraf ./dist/afterManage/*",
        "dev:afterManage": "cross-env MODULE=afterManage npm run micro:dev",
        "dev:afterManage:app": "cross-env MODULE_DEV=afterManage npm run build:app && npm run dev:afterManage",
        "build:afterManage": "npm run clean:afterManage && cross-env MODULE=afterManage npm run micro:build",
        "build:afterManage:test": "npm run clean:afterManage && cross-env MODULE=afterManage npm run micro:build:test",
        "build:afterManage:analyzer": "npm run clean:afterManage && cross-env MODULE=afterManage npm run micro:build:analyzer",
        "clean:exitManage": "rimraf ./dist/exitManage/*",
        "dev:exitManage": "cross-env MODULE=exitManage npm run micro:dev",
        "dev:exitManage:app": "cross-env MODULE_DEV=exitManage npm run build:app && npm run dev:exitManage",
        "build:exitManage": "npm run clean:exitManage && cross-env MODULE=exitManage npm run micro:build",
        "build:exitManage:test": "npm run clean:exitManage && cross-env MODULE=exitManage npm run micro:build:test",
        "build:exitManage:analyzer": "npm run clean:exitManage && cross-env MODULE=exitManage npm run micro:build:analyzer",
        "clean:transactionOpponent": "rimraf ./dist/transactionOpponent/*",
        "dev:transactionOpponent": "cross-env MODULE=transactionOpponent npm run micro:dev",
        "dev:transactionOpponent:app": "cross-env MODULE_DEV=transactionOpponent npm run build:app && npm run dev:transactionOpponent",
        "build:transactionOpponent": "npm run clean:transactionOpponent && cross-env MODULE=transactionOpponent npm run micro:build",
        "build:transactionOpponent:test": "npm run clean:transactionOpponent && cross-env MODULE=transactionOpponent npm run micro:build:test",
        "build:transactionOpponent:analyzer": "npm run clean:transactionOpponent && cross-env MODULE=transactionOpponent npm run micro:build:analyzer",
        "clean:redYellowBlueCard": "rimraf ./dist/redYellowBlueCard/*",
        "dev:redYellowBlueCard": "cross-env MODULE=redYellowBlueCard npm run micro:dev",
        "dev:redYellowBlueCard:app": "cross-env MODULE_DEV=redYellowBlueCard npm run build:app && npm run dev:redYellowBlueCard",
        "build:redYellowBlueCard": "npm run clean:redYellowBlueCard && cross-env MODULE=redYellowBlueCard npm run micro:build",
        "build:redYellowBlueCard:test": "npm run clean:redYellowBlueCard && cross-env MODULE=redYellowBlueCard npm run micro:build:test",
        "build:redYellowBlueCard:analyzer": "npm run clean:redYellowBlueCard && cross-env MODULE=redYellowBlueCard npm run micro:build:analyzer",
        "clean:groupReport": "rimraf ./dist/groupReport/*",
        "dev:groupReport": "cross-env MODULE=groupReport npm run micro:dev",
        "dev:groupReport:app": "cross-env MODULE_DEV=groupReport npm run build:app && npm run dev:groupReport",
        "build:groupReport": "npm run clean:groupReport && cross-env MODULE=groupReport npm run micro:build",
        "build:groupReport:test": "npm run clean:groupReport && cross-env MODULE=groupReport npm run micro:build:test",
        "build:groupReport:analyzer": "npm run clean:groupReport && cross-env MODULE=groupReport npm run micro:build:analyzer",
        "clean:evaluateCalculation": "rimraf ./dist/evaluateCalculation/*",
        "dev:evaluateCalculation": "cross-env MODULE=evaluateCalculation npm run micro:dev",
        "dev:evaluateCalculation:app": "cross-env MODULE_DEV=evaluateCalculation npm run build:app && npm run dev:evaluateCalculation",
        "build:evaluateCalculation": "npm run clean:evaluateCalculation && cross-env MODULE=evaluateCalculation npm run micro:build",
        "build:evaluateCalculation:test": "npm run clean:evaluateCalculation && cross-env MODULE=evaluateCalculation npm run micro:build:test",
        "build:evaluateCalculation:analyzer": "npm run clean:evaluateCalculation && cross-env MODULE=evaluateCalculation npm run micro:build:analyzer",
        "clean:capitalPlan": "rimraf ./dist/capitalPlan/*",
        "dev:capitalPlan": "cross-env MODULE=capitalPlan npm run micro:dev",
        "dev:capitalPlan:app": "cross-env MODULE_DEV=capitalPlan npm run build:app && npm run dev:capitalPlan",
        "build:capitalPlan": "npm run clean:capitalPlan && cross-env MODULE=capitalPlan npm run micro:build",
        "build:capitalPlan:test": "npm run clean:capitalPlan && cross-env MODULE=capitalPlan npm run micro:build:test",
        "build:capitalPlan:analyzer": "npm run clean:capitalPlan && cross-env MODULE=capitalPlan npm run micro:build:analyzer",
        "clean:warningManage": "rimraf ./dist/warningManage/*",
        "dev:warningManage": "cross-env MODULE=warningManage npm run micro:dev",
        "dev:warningManage:app": "cross-env MODULE_DEV=warningManage npm run build:app && npm run dev:warningManage",
        "build:warningManage": "npm run clean:warningManage && cross-env MODULE=warningManage npm run micro:build",
        "build:warningManage:test": "npm run clean:warningManage && cross-env MODULE=warningManage npm run micro:build:test",
        "build:warningManage:analyzer": "npm run clean:warningManage && cross-env MODULE=warningManage npm run micro:build:analyzer",
        "clean:statisticalReports": "rimraf ./dist/statisticalReports/*",
        "dev:statisticalReports": "cross-env MODULE=statisticalReports npm run micro:dev",
        "dev:statisticalReports:app": "cross-env MODULE_DEV=statisticalReports npm run build:app && npm run dev:statisticalReports",
        "build:statisticalReports": "npm run clean:statisticalReports && cross-env MODULE=statisticalReports npm run micro:build",
        "build:statisticalReports:test": "npm run clean:statisticalReports && cross-env MODULE=statisticalReports npm run micro:build:test",
        "build:statisticalReports:analyzer": "npm run clean:statisticalReports && cross-env MODULE=statisticalReports npm run micro:build:analyzer"
    },
    "author": "",
    "license": "ISC",
    "dependencies": {
        "@antv/data-set": "^0.10.2",
        "@antv/g2": "^3.5.9",
        "@svgr/webpack": "^4.3.3",
        "antd": "3.10.0",
        "axios": "^0.18.0",
        "braft-editor": "^2.3.8",
        "bundle-loader": "^0.5.6",
        "cors": "^2.8.5",
        "history": "^4.10.1",
        "html2canvas": "^1.0.0-rc.5",
        "jquery": "^3.3.1",
        "js-cookie": "^2.2.1",
        "lodash": "^4.17.15",
        "mobx": "^4.14.1",
        "mobx-react": "^5.4.3",
        "mockjs": "^1.1.0",
        "moment": "^2.22.2",
        "moment-recur": "^1.0.7",
        "npm": "^6.12.0",
        "qs": "^6.9.0",
        "rc-form": "^2.4.9",
        "rc-mentions": "^0.4.1",
        "react": "^16.11.0",
        "react-dom": "^16.11.0",
        "react-router-dom": "^4.3.1",
        "resize-observer-polyfill": "^1.5.1",
        "svg.js": "^2.6.6"
    },
    "devDependencies": {
        "@babel/core": "^7.6.4",
        "@babel/preset-env": "^7.6.3",
        "@svgr/webpack": "^4.3.3",
        "@typescript-eslint/eslint-plugin": "^2.5.0",
        "@typescript-eslint/parser": "^2.5.0",
        "autoprefixer": "^9.7.0",
        "babel-core": "^6.26.3",
        "babel-loader": "^7.1.5",
        "babel-plugin-add-module-exports": "^1.0.0",
        "babel-plugin-import": "^1.12.2",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-decorators-legacy": "^1.3.5",
        "babel-plugin-transform-runtime": "^6.23.0",
        "babel-polyfill": "^6.26.0",
        "babel-preset-env": "^1.7.0",
        "babel-preset-react": "^6.24.1",
        "babel-preset-stage-0": "^6.24.1",
        "classnames": "^2.2.6",
        "copy-webpack-plugin": "^4.5.2",
        "cross-env": "^5.2.1",
        "css-loader": "^1.0.0",
        "eslint": "^6.5.1",
        "eslint-config-airbnb": "^18.0.1",
        "eslint-loader": "^3.0.2",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jsx-a11y": "^6.2.3",
        "eslint-plugin-react": "^7.16.0",
        "eslint-plugin-react-hooks": "^1.7.0",
        "file-loader": "^2.0.0",
        "happypack": "^5.0.0",
        "html-webpack-plugin": "^3.2.0",
        "increase-memory-limit": "^1.0.7",
        "less": "^3.10.3",
        "less-loader": "^4.1.0",
        "mini-css-extract-plugin": "^0.4.2",
        "optimize-css-assets-webpack-plugin": "^5.0.3",
        "os": "^0.1.1",
        "postcss-loader": "^3.0.0",
        "rimraf": "^2.7.1",
        "style-loader": "^0.23.0",
        "uglifyjs-webpack-plugin": "^1.3.0",
        "url-loader": "^1.1.1",
        "webpack": "^4.41.2",
        "webpack-bundle-analyzer": "^3.6.0",
        "webpack-cli": "^3.3.9",
        "webpack-dev-server": "^3.9.0",
        "webpack-manifest-plugin": "^2.2.0",
        "webpack-merge": "^4.2.2"
    },
    "browserslist": {
        "production": [
            "> 1%",
            "last 10 versions"
        ],
        "development": [
            "> 1%",
            "last 10 versions"
        ]
    }
}